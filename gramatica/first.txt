first(P) = {  { }
first(FUNCION) = {int(1),real(1),string(1),e(2)}
first(VARIABLES) = {'('(3)}
first(VARIABLESP) = { '(' (4), ε (5)}
first(TIPO) = { int(6), real(7), string(8)}
first(MAIN) = { main() (9)}
first(LISTAS) = { identificador (10), ε(12)}
first(LISTA_VALOR) = { [ (11)}
first(VALOR)  = { numero(13),texto (14)}
first(SUBLISTA)  = {numero(15),texto(16), identificador(17), [(18), e(19)}
first(SUBLISTAPRIMA)  = { e(20)}
first(PARAM)  = { identificador(21),e(22)}
first(LISTAPARAMETROS)  = { ;(23), e(24)}
first(DICCIONARIO)  = { {{ (25),e(26)}
first(CLAVES_VALORES)  = { texto(27)}
first(CLAVES_VALORES_PRIMA)  = { ;(28),e(29)}
first(CUERPO)  = { when(36),since(37),do(38),print(39),( (40),identificador(41),input(97)}
first(ELSE_IF)  = { elif(31),e(32)}
first(ELSE_IF_PRIMA)  = { (33),elif(31),e(32),else(34),e(35)}
first(ASIGNACION)  = {fact(42),power(43),abs(44),minimal(45),maximal(46),identificador(47),numero(47)}
first(IMPRESION)  = {identifcador(48),numero(49)}
first(IMPRESIONPRIMA) = {,(50),e(51)}
first(RANGE)  = { range(52)}
first(RANGOFOR)  = { identificador(53)}
first(RANGOFOR_A) = { ;(54),e(55)}
first(RANGOFOR_B)   = { ;(56),e(57)}
first(LISTARETURN)  = {identificador(58),numero(59),texto(60)}
first(LISTARETURNPRIMA)  = {,(61),e(62)}
first(BOOLEXP)  = { not(63),( (63),identificador(63),numero(63)}
first(BOOLEXPP)  = { or(64), ||(64)}
first(BOOLTERM)  = { not(66),( (66),identificador(66),numero(66)}
first(BOOLTERMP)   = { and(67), &&(67),e(68)}
first(BOOLFACTOR)   = {not(69),( (70), identificador(71),numero(71)}
first(RELTERMP)  = {<:<(72),>:>(72),<:=(72),>:=(72),=:=(72),!=:=(72),e(73)}
first(RELTERM)  = { identificador(74),numero(74)}
first(EXPARITM)  = { identificador(75),numero(75)}
first(EXPPRIMA)   = { +(76),-(77),e(78)}
first(TERMINO) = {identifcador(79),numero(79)}
first(TERMPRIMO)  = {*(80),/(81),//(82)}
first(FACTOR)  = { identifcador(83),numero(84)}
first(OPERADOR)  = {<:<(85) ,>:>(86) ,<:=(87) ,>:=(88) ,=:=(89) ,!=:=(90)}
first(OR)  = { or(91),||(92)}
first(AND)  = { and(93),&& (98)}
first(NOT)  = { not(95), !(96)}
